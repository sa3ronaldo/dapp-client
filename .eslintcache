[{"C:\\sandbox\\primeiro_game\\dapp-client\\src\\index.js":"1","C:\\sandbox\\primeiro_game\\dapp-client\\src\\App.js":"2","C:\\sandbox\\primeiro_game\\dapp-client\\src\\reportWebVitals.js":"3","C:\\sandbox\\primeiro_game\\dapp-client\\src\\blockchain\\index.js":"4","C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\index.js":"5","C:\\sandbox\\primeiro_game\\dapp-client\\src\\componentes\\GameContainer\\index.js":"6","C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\ducks\\memory.js":"7","C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\ducks\\index.js":"8","C:\\sandbox\\primeiro_game\\dapp-client\\src\\componentes\\CardBoard\\index.js":"9"},{"size":548,"mtime":1642836517391,"results":"10","hashOfConfig":"11"},{"size":491,"mtime":1642872786594,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":4668,"mtime":1642877032146,"results":"14","hashOfConfig":"11"},{"size":142,"mtime":1642835773197,"results":"15","hashOfConfig":"11"},{"size":1502,"mtime":1642877398015,"results":"16","hashOfConfig":"11"},{"size":2070,"mtime":1642835196984,"results":"17","hashOfConfig":"11"},{"size":127,"mtime":1642835728612,"results":"18","hashOfConfig":"11"},{"size":2733,"mtime":1642836888513,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"105gfwp",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"C:\\sandbox\\primeiro_game\\dapp-client\\src\\index.js",[],["40","41"],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\App.js",[],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\reportWebVitals.js",[],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\blockchain\\index.js",["42"],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\index.js",[],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\componentes\\GameContainer\\index.js",["43","44","45","46"],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\ducks\\memory.js",[],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\store\\ducks\\index.js",[],"C:\\sandbox\\primeiro_game\\dapp-client\\src\\componentes\\CardBoard\\index.js",["47","48"],"import { useEffect } from \"react\"\r\n\r\nconst CardBoard = (props) => {\r\n    const { flipCard, clearChosenCards, setWonCard, onWonCard } = props\r\n    const { cardData, cardsWon, cardsChosenId, cardsChosen } = props.memory\r\n\r\n    // SELECIONA O TIPO DE IMAGEM\r\n    const chooseImage = (cardId) => {\r\n        const cardIdStr = cardId.toString()\r\n\r\n        if(cardsWon.includes(cardIdStr)) {\r\n            return  window.location.origin + '/images/white.png'\r\n        }\r\n        else if(cardsChosenId.includes(cardIdStr)) {\r\n            return cardData[cardIdStr].img\r\n        } else {\r\n            return window.location.origin + '/images/blank.png'\r\n        }\r\n    }\r\n\r\n    const handleOnWonCard = (cardId, cardImage) => {\r\n        if (onWonCard !== undefined){\r\n            const cardUrl = window.location.origin + cardImage\r\n            onWonCard(cardId, cardUrl)\r\n        }\r\n    }\r\n\r\n    const checkAlreadyWonCard = (cardId)  =>\r\n        cardsWon.includes(cardId)\r\n\r\n    const handleFlipCard = (cardId)  => {\r\n        flipCard(cardId)\r\n    }\r\n\r\n    const checkForMatch = async () => {\r\n        const optionOneId = cardsChosenId[0]\r\n        const optionTwoId = cardsChosenId[1]\r\n\r\n        if(optionOneId === optionTwoId) {\r\n            alert('Você já selecionou esta imagem!')\r\n        }\r\n        else if (cardsChosen[0] === cardsChosen[1]) {\r\n            alert('SUCESSO! você encontrou uma combinação!')\r\n\r\n            setWonCard(optionOneId, optionTwoId)\r\n            //tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\r\n            // cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\r\n            handleOnWonCard(optionOneId, cardData[optionOneId].img)\r\n        } else {\r\n            alert('Desculpe, tente novamente')\r\n        }\r\n\r\n        clearChosenCards()\r\n        if (cardsWon.length === cardData.length) {\r\n            alert('Parabéns! Você encontrou todos eles!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let alreadyChosen = cardsChosen.length\r\n        if (alreadyChosen === 2) {\r\n            checkForMatch()\r\n        }\r\n    }, [cardsChosen])\r\n\r\n    return (\r\n        cardData.map((card, key) => {\r\n                return(\r\n                    <img\r\n                        key={key}\r\n                        src={chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                            let cardId = event.target.getAttribute('data-id')\r\n\r\n                            if(!checkAlreadyWonCard(cardId)) {\r\n                                handleFlipCard(cardId)\r\n                            }\r\n\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        ))\r\n}\r\n\r\nexport default CardBoard",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":19,"column":12,"nodeType":"55","messageId":"56","endLine":19,"endColumn":17},{"ruleId":"53","severity":1,"message":"57","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":17,"column":9,"nodeType":"55","messageId":"56","endLine":17,"endColumn":16},{"ruleId":"53","severity":1,"message":"59","line":19,"column":9,"nodeType":"55","messageId":"56","endLine":19,"endColumn":15},{"ruleId":"53","severity":1,"message":"60","line":20,"column":9,"nodeType":"55","messageId":"56","endLine":20,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":64,"column":8,"nodeType":"63","endLine":64,"endColumn":21,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":69,"column":21,"nodeType":"67","endLine":81,"endColumn":23},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'account' is assigned a value but never used.","'balance' is assigned a value but never used.","'doMint' is assigned a value but never used.","'myTokens' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkForMatch'. Either include it or remove the dependency array.","ArrayExpression",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [cardsChosen, checkForMatch]",{"range":"73","text":"74"},[2074,2087],"[cardsChosen, checkForMatch]"]